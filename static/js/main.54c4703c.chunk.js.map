{"version":3,"sources":["App.tsx","components/Good.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","Good","name","GoodsList","goods","map","good","goodsFromServer","getReorderedGoods","sortType","isReversed","visibleGoods","ALPHABET","sort","g1","g2","localeCompare","LENGTH","length","reverse","INITIAL_STATE","NONE","App","state","sortAlphabetically","setState","sortByLength","prevState","reset","this","className","type","classNames","onClick","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,0GChBQC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAyB,oBAAI,UAAQ,OAAZ,SAAoBA,KCEpDC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAMJ,KAAMI,GAAWA,SFDjCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdJ,EADK,GAGJ,IADCK,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOP,GAQzB,OANIK,IAAaT,EAASY,SACxBD,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MACtCN,IAAaT,EAASiB,QAC/BN,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,OAASH,EAAGG,UAGxCR,EAAaC,EAAaQ,UAAYR,G,SAzB1CX,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCL,IAAMoB,EAAuB,CAC3BV,YAAY,EACZD,SAAUT,EAASqB,MAGRC,EAAb,4MACEC,MAAyBH,EAD3B,EAGEI,mBAAqB,WACnB,EAAKC,SAAS,CACZhB,SAAUT,EAASY,YALzB,EASEc,aAAe,WACb,EAAKD,SAAS,CACZhB,SAAUT,EAASiB,UAXzB,EAeEE,QAAU,kBAAM,EAAKM,UAAS,SAACE,GAAD,MAAuB,CACnDjB,YAAaiB,EAAUjB,gBAhB3B,EAmBEkB,MAAQ,WACN,EAAKH,SAASL,IApBlB,4CAuBE,WACE,MAAiCS,KAAKN,MAA9Bd,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYvB,IAAaT,EAASY,WAEpCqB,QAASJ,KAAKL,mBALhB,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYvB,IAAaT,EAASiB,SAEpCgB,QAASJ,KAAKH,aALhB,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAAatB,IAEfuB,QAASJ,KAAKV,QALhB,sBAUEV,IAAaT,EAASqB,MAAQX,IAC9B,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKD,MAHhB,sBAUJ,cAAC,EAAD,CAAWxB,MAAOI,EAAkBD,EAAiBsB,KAAKN,gBAtElE,GAAyBW,IAAMC,eGxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.54c4703c.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\n\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((g1, g2) => g1.length - g2.length);\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nconst INITIAL_STATE: State = {\n  isReversed: false,\n  sortType: SortType.NONE,\n};\n\nexport class App extends React.PureComponent {\n  state: Readonly<State> = INITIAL_STATE;\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverse = () => this.setState((prevState: State) => ({\n    isReversed: !prevState.isReversed,\n  }));\n\n  reset = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodsList goods={getReorderedGoods(goodsFromServer, this.state)} />\n      </div>\n    );\n  }\n}\n","type GoodProps = {\n  name: string\n};\n\nexport const Good = ({ name }: GoodProps) => <li data-cy=\"Good\">{name}</li>;\n","import { Good } from './Good';\n\ntype GoddsListProps = {\n  goods: string[]\n};\n\nexport const GoodsList = ({ goods }: GoddsListProps) => (\n  <ul>\n    {goods.map(good => <Good name={good} key={good} />)}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}